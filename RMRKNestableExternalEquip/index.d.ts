/** WARNING! This file is auto-generated. Please do not edit! */
import { useVERSION, VERSIONOptions } from './modules/use-version';
export * from './modules/use-version';
import { useAcceptChild, AcceptChildArguments, AcceptChildOptions } from './modules/use-accept-child';
export * from './modules/use-accept-child';
import { useAddChild, AddChildArguments, AddChildOptions } from './modules/use-add-child';
export * from './modules/use-add-child';
import { useApprove, ApproveArguments, ApproveOptions } from './modules/use-approve';
export * from './modules/use-approve';
import { useBalanceOf, BalanceOfArguments, BalanceOfOptions } from './modules/use-balance-of';
export * from './modules/use-balance-of';
import { useBurn, BurnArguments, BurnOptions } from './modules/use-burn';
export * from './modules/use-burn';
import { useChildIsInActive, ChildIsInActiveArguments, ChildIsInActiveOptions } from './modules/use-child-is-in-active';
export * from './modules/use-child-is-in-active';
import { useChildOf, ChildOfArguments, ChildOfOptions } from './modules/use-child-of';
export * from './modules/use-child-of';
import { useChildrenOf, ChildrenOfArguments, ChildrenOfOptions } from './modules/use-children-of';
export * from './modules/use-children-of';
import { useCollectionMetadata, CollectionMetadataOptions } from './modules/use-collection-metadata';
export * from './modules/use-collection-metadata';
import { useDirectOwnerOf, DirectOwnerOfArguments, DirectOwnerOfOptions } from './modules/use-direct-owner-of';
export * from './modules/use-direct-owner-of';
import { useGetApproved, GetApprovedArguments, GetApprovedOptions } from './modules/use-get-approved';
export * from './modules/use-get-approved';
import { useGetEquippableAddress, GetEquippableAddressOptions } from './modules/use-get-equippable-address';
export * from './modules/use-get-equippable-address';
import { useGetLock, GetLockOptions } from './modules/use-get-lock';
export * from './modules/use-get-lock';
import { useGetRoyaltyPercentage, GetRoyaltyPercentageOptions } from './modules/use-get-royalty-percentage';
export * from './modules/use-get-royalty-percentage';
import { useGetRoyaltyRecipient, GetRoyaltyRecipientOptions } from './modules/use-get-royalty-recipient';
export * from './modules/use-get-royalty-recipient';
import { useIsApprovedForAll, IsApprovedForAllArguments, IsApprovedForAllOptions } from './modules/use-is-approved-for-all';
export * from './modules/use-is-approved-for-all';
import { useIsApprovedOrOwner, IsApprovedOrOwnerArguments, IsApprovedOrOwnerOptions } from './modules/use-is-approved-or-owner';
export * from './modules/use-is-approved-or-owner';
import { useIsContributor, IsContributorArguments, IsContributorOptions } from './modules/use-is-contributor';
export * from './modules/use-is-contributor';
import { useManageContributor, ManageContributorArguments, ManageContributorOptions } from './modules/use-manage-contributor';
export * from './modules/use-manage-contributor';
import { useMaxSupply, MaxSupplyOptions } from './modules/use-max-supply';
export * from './modules/use-max-supply';
import { useMint, MintArguments, MintOptions } from './modules/use-mint';
export * from './modules/use-mint';
import { useName, NameOptions } from './modules/use-name';
export * from './modules/use-name';
import { useNestMint, NestMintArguments, NestMintOptions } from './modules/use-nest-mint';
export * from './modules/use-nest-mint';
import { useNestTransferFrom, NestTransferFromArguments, NestTransferFromOptions } from './modules/use-nest-transfer-from';
export * from './modules/use-nest-transfer-from';
import { useOwner, OwnerOptions } from './modules/use-owner';
export * from './modules/use-owner';
import { useOwnerOf, OwnerOfArguments, OwnerOfOptions } from './modules/use-owner-of';
export * from './modules/use-owner-of';
import { usePendingChildOf, PendingChildOfArguments, PendingChildOfOptions } from './modules/use-pending-child-of';
export * from './modules/use-pending-child-of';
import { usePendingChildrenOf, PendingChildrenOfArguments, PendingChildrenOfOptions } from './modules/use-pending-children-of';
export * from './modules/use-pending-children-of';
import { usePricePerMint, PricePerMintOptions } from './modules/use-price-per-mint';
export * from './modules/use-price-per-mint';
import { useRejectAllChildren, RejectAllChildrenArguments, RejectAllChildrenOptions } from './modules/use-reject-all-children';
export * from './modules/use-reject-all-children';
import { useRenounceOwnership, RenounceOwnershipOptions } from './modules/use-renounce-ownership';
export * from './modules/use-renounce-ownership';
import { useRoyaltyInfo, RoyaltyInfoArguments, RoyaltyInfoOptions } from './modules/use-royalty-info';
export * from './modules/use-royalty-info';
import { useSafeTransferFrom, SafeTransferFromArguments, SafeTransferFromOptions } from './modules/use-safe-transfer-from';
export * from './modules/use-safe-transfer-from';
import { useSetApprovalForAll, SetApprovalForAllArguments, SetApprovalForAllOptions } from './modules/use-set-approval-for-all';
export * from './modules/use-set-approval-for-all';
import { useSetEquippableAddress, SetEquippableAddressArguments, SetEquippableAddressOptions } from './modules/use-set-equippable-address';
export * from './modules/use-set-equippable-address';
import { useSetLock, SetLockOptions } from './modules/use-set-lock';
export * from './modules/use-set-lock';
import { useSupportsInterface, SupportsInterfaceArguments, SupportsInterfaceOptions } from './modules/use-supports-interface';
export * from './modules/use-supports-interface';
import { useSymbol, SymbolOptions } from './modules/use-symbol';
export * from './modules/use-symbol';
import { useTokenURI, TokenURIArguments, TokenURIOptions } from './modules/use-token-uri';
export * from './modules/use-token-uri';
import { useTotalSupply, TotalSupplyOptions } from './modules/use-total-supply';
export * from './modules/use-total-supply';
import { useTransferChild, TransferChildArguments, TransferChildOptions } from './modules/use-transfer-child';
export * from './modules/use-transfer-child';
import { useTransferFrom, TransferFromArguments, TransferFromOptions } from './modules/use-transfer-from';
export * from './modules/use-transfer-from';
import { useTransferOwnership, TransferOwnershipArguments, TransferOwnershipOptions } from './modules/use-transfer-ownership';
export * from './modules/use-transfer-ownership';
import { useUpdateRoyaltyRecipient, UpdateRoyaltyRecipientArguments, UpdateRoyaltyRecipientOptions } from './modules/use-update-royalty-recipient';
export * from './modules/use-update-royalty-recipient';
import { useWithdrawRaised, WithdrawRaisedArguments, WithdrawRaisedOptions } from './modules/use-withdraw-raised';
export * from './modules/use-withdraw-raised';
export declare const RMRKNestableExternalEquip: {
    useVERSION(opts: VERSIONOptions): ReturnType<typeof useVERSION>;
    useAcceptChild(args: AcceptChildArguments, opts: AcceptChildOptions): ReturnType<typeof useAcceptChild>;
    useAddChild(args: AddChildArguments, opts: AddChildOptions): ReturnType<typeof useAddChild>;
    useApprove(args: ApproveArguments, opts: ApproveOptions): ReturnType<typeof useApprove>;
    useBalanceOf(args: BalanceOfArguments[], opts: BalanceOfOptions): ReturnType<typeof useBalanceOf>;
    useBurn(args: BurnArguments, opts: BurnOptions): ReturnType<typeof useBurn>;
    useChildIsInActive(args: ChildIsInActiveArguments[], opts: ChildIsInActiveOptions): ReturnType<typeof useChildIsInActive>;
    useChildOf(args: ChildOfArguments[], opts: ChildOfOptions): ReturnType<typeof useChildOf>;
    useChildrenOf(args: ChildrenOfArguments[], opts: ChildrenOfOptions): ReturnType<typeof useChildrenOf>;
    useCollectionMetadata(opts: CollectionMetadataOptions): ReturnType<typeof useCollectionMetadata>;
    useDirectOwnerOf(args: DirectOwnerOfArguments[], opts: DirectOwnerOfOptions): ReturnType<typeof useDirectOwnerOf>;
    useGetApproved(args: GetApprovedArguments[], opts: GetApprovedOptions): ReturnType<typeof useGetApproved>;
    useGetEquippableAddress(opts: GetEquippableAddressOptions): ReturnType<typeof useGetEquippableAddress>;
    useGetLock(opts: GetLockOptions): ReturnType<typeof useGetLock>;
    useGetRoyaltyPercentage(opts: GetRoyaltyPercentageOptions): ReturnType<typeof useGetRoyaltyPercentage>;
    useGetRoyaltyRecipient(opts: GetRoyaltyRecipientOptions): ReturnType<typeof useGetRoyaltyRecipient>;
    useIsApprovedForAll(args: IsApprovedForAllArguments[], opts: IsApprovedForAllOptions): ReturnType<typeof useIsApprovedForAll>;
    useIsApprovedOrOwner(args: IsApprovedOrOwnerArguments[], opts: IsApprovedOrOwnerOptions): ReturnType<typeof useIsApprovedOrOwner>;
    useIsContributor(args: IsContributorArguments[], opts: IsContributorOptions): ReturnType<typeof useIsContributor>;
    useManageContributor(args: ManageContributorArguments, opts: ManageContributorOptions): ReturnType<typeof useManageContributor>;
    useMaxSupply(opts: MaxSupplyOptions): ReturnType<typeof useMaxSupply>;
    useMint(args: MintArguments, opts: MintOptions): ReturnType<typeof useMint>;
    useName(opts: NameOptions): ReturnType<typeof useName>;
    useNestMint(args: NestMintArguments, opts: NestMintOptions): ReturnType<typeof useNestMint>;
    useNestTransferFrom(args: NestTransferFromArguments, opts: NestTransferFromOptions): ReturnType<typeof useNestTransferFrom>;
    useOwner(opts: OwnerOptions): ReturnType<typeof useOwner>;
    useOwnerOf(args: OwnerOfArguments[], opts: OwnerOfOptions): ReturnType<typeof useOwnerOf>;
    usePendingChildOf(args: PendingChildOfArguments[], opts: PendingChildOfOptions): ReturnType<typeof usePendingChildOf>;
    usePendingChildrenOf(args: PendingChildrenOfArguments[], opts: PendingChildrenOfOptions): ReturnType<typeof usePendingChildrenOf>;
    usePricePerMint(opts: PricePerMintOptions): ReturnType<typeof usePricePerMint>;
    useRejectAllChildren(args: RejectAllChildrenArguments, opts: RejectAllChildrenOptions): ReturnType<typeof useRejectAllChildren>;
    useRenounceOwnership(opts: RenounceOwnershipOptions): ReturnType<typeof useRenounceOwnership>;
    useRoyaltyInfo(args: RoyaltyInfoArguments[], opts: RoyaltyInfoOptions): ReturnType<typeof useRoyaltyInfo>;
    useSafeTransferFrom(args: SafeTransferFromArguments, opts: SafeTransferFromOptions): ReturnType<typeof useSafeTransferFrom>;
    useSetApprovalForAll(args: SetApprovalForAllArguments, opts: SetApprovalForAllOptions): ReturnType<typeof useSetApprovalForAll>;
    useSetEquippableAddress(args: SetEquippableAddressArguments, opts: SetEquippableAddressOptions): ReturnType<typeof useSetEquippableAddress>;
    useSetLock(opts: SetLockOptions): ReturnType<typeof useSetLock>;
    useSupportsInterface(args: SupportsInterfaceArguments[], opts: SupportsInterfaceOptions): ReturnType<typeof useSupportsInterface>;
    useSymbol(opts: SymbolOptions): ReturnType<typeof useSymbol>;
    useTokenURI(args: TokenURIArguments[], opts: TokenURIOptions): ReturnType<typeof useTokenURI>;
    useTotalSupply(opts: TotalSupplyOptions): ReturnType<typeof useTotalSupply>;
    useTransferChild(args: TransferChildArguments, opts: TransferChildOptions): ReturnType<typeof useTransferChild>;
    useTransferFrom(args: TransferFromArguments, opts: TransferFromOptions): ReturnType<typeof useTransferFrom>;
    useTransferOwnership(args: TransferOwnershipArguments, opts: TransferOwnershipOptions): ReturnType<typeof useTransferOwnership>;
    useUpdateRoyaltyRecipient(args: UpdateRoyaltyRecipientArguments, opts: UpdateRoyaltyRecipientOptions): ReturnType<typeof useUpdateRoyaltyRecipient>;
    useWithdrawRaised(args: WithdrawRaisedArguments, opts: WithdrawRaisedOptions): ReturnType<typeof useWithdrawRaised>;
};
