/** WARNING! This file is auto-generated. Please do not edit! */
import { use_splitSlotAndFixedParts, _splitSlotAndFixedPartsArguments, _splitSlotAndFixedPartsOptions } from './modules/use-_split-slot-and-fixed-parts';
export * from './modules/use-_split-slot-and-fixed-parts';
import { useCheckExpectedParent, CheckExpectedParentArguments, CheckExpectedParentOptions } from './modules/use-check-expected-parent';
export * from './modules/use-check-expected-parent';
import { useComposeEquippables, ComposeEquippablesArguments, ComposeEquippablesOptions } from './modules/use-compose-equippables';
export * from './modules/use-compose-equippables';
import { useGetAllEquippableSlotsFromParent, GetAllEquippableSlotsFromParentArguments, GetAllEquippableSlotsFromParentOptions } from './modules/use-get-all-equippable-slots-from-parent';
export * from './modules/use-get-all-equippable-slots-from-parent';
import { useGetAssetIdWithTopPriority, GetAssetIdWithTopPriorityArguments, GetAssetIdWithTopPriorityOptions } from './modules/use-get-asset-id-with-top-priority';
export * from './modules/use-get-asset-id-with-top-priority';
import { useGetAssetsById, GetAssetsByIdArguments, GetAssetsByIdOptions } from './modules/use-get-assets-by-id';
export * from './modules/use-get-assets-by-id';
import { useGetChildIndex, GetChildIndexArguments, GetChildIndexOptions } from './modules/use-get-child-index';
export * from './modules/use-get-child-index';
import { useGetEquippableSlotsFromParent, GetEquippableSlotsFromParentArguments, GetEquippableSlotsFromParentOptions } from './modules/use-get-equippable-slots-from-parent';
export * from './modules/use-get-equippable-slots-from-parent';
import { useGetEquipped, GetEquippedArguments, GetEquippedOptions } from './modules/use-get-equipped';
export * from './modules/use-get-equipped';
import { useGetExtendedActiveAssets, GetExtendedActiveAssetsArguments, GetExtendedActiveAssetsOptions } from './modules/use-get-extended-active-assets';
export * from './modules/use-get-extended-active-assets';
import { useGetExtendedEquippableActiveAssets, GetExtendedEquippableActiveAssetsArguments, GetExtendedEquippableActiveAssetsOptions } from './modules/use-get-extended-equippable-active-assets';
export * from './modules/use-get-extended-equippable-active-assets';
import { useGetExtendedNft, GetExtendedNftArguments, GetExtendedNftOptions } from './modules/use-get-extended-nft';
export * from './modules/use-get-extended-nft';
import { useGetExtendedPendingAssets, GetExtendedPendingAssetsArguments, GetExtendedPendingAssetsOptions } from './modules/use-get-extended-pending-assets';
export * from './modules/use-get-extended-pending-assets';
import { useGetPaginatedMintedIds, GetPaginatedMintedIdsArguments, GetPaginatedMintedIdsOptions } from './modules/use-get-paginated-minted-ids';
export * from './modules/use-get-paginated-minted-ids';
import { useGetParent, GetParentArguments, GetParentOptions } from './modules/use-get-parent';
export * from './modules/use-get-parent';
import { useGetPendingAssets, GetPendingAssetsArguments, GetPendingAssetsOptions } from './modules/use-get-pending-assets';
export * from './modules/use-get-pending-assets';
import { useGetTopAssetAndEquippableDataForToken, GetTopAssetAndEquippableDataForTokenArguments, GetTopAssetAndEquippableDataForTokenOptions } from './modules/use-get-top-asset-and-equippable-data-for-token';
export * from './modules/use-get-top-asset-and-equippable-data-for-token';
import { useGetTopAssetMetaForToken, GetTopAssetMetaForTokenArguments, GetTopAssetMetaForTokenOptions } from './modules/use-get-top-asset-meta-for-token';
export * from './modules/use-get-top-asset-meta-for-token';
import { useIsAssetEquipped, IsAssetEquippedArguments, IsAssetEquippedOptions } from './modules/use-is-asset-equipped';
export * from './modules/use-is-asset-equipped';
export declare const RMRKEquipRenderUtils: {
    use_splitSlotAndFixedParts(args: _splitSlotAndFixedPartsArguments[], opts: _splitSlotAndFixedPartsOptions): ReturnType<typeof use_splitSlotAndFixedParts>;
    useCheckExpectedParent(args: CheckExpectedParentArguments[], opts: CheckExpectedParentOptions): ReturnType<typeof useCheckExpectedParent>;
    useComposeEquippables(args: ComposeEquippablesArguments[], opts: ComposeEquippablesOptions): ReturnType<typeof useComposeEquippables>;
    useGetAllEquippableSlotsFromParent(args: GetAllEquippableSlotsFromParentArguments[], opts: GetAllEquippableSlotsFromParentOptions): ReturnType<typeof useGetAllEquippableSlotsFromParent>;
    useGetAssetIdWithTopPriority(args: GetAssetIdWithTopPriorityArguments[], opts: GetAssetIdWithTopPriorityOptions): ReturnType<typeof useGetAssetIdWithTopPriority>;
    useGetAssetsById(args: GetAssetsByIdArguments[], opts: GetAssetsByIdOptions): ReturnType<typeof useGetAssetsById>;
    useGetChildIndex(args: GetChildIndexArguments[], opts: GetChildIndexOptions): ReturnType<typeof useGetChildIndex>;
    useGetEquippableSlotsFromParent(args: GetEquippableSlotsFromParentArguments[], opts: GetEquippableSlotsFromParentOptions): ReturnType<typeof useGetEquippableSlotsFromParent>;
    useGetEquipped(args: GetEquippedArguments[], opts: GetEquippedOptions): ReturnType<typeof useGetEquipped>;
    useGetExtendedActiveAssets(args: GetExtendedActiveAssetsArguments[], opts: GetExtendedActiveAssetsOptions): ReturnType<typeof useGetExtendedActiveAssets>;
    useGetExtendedEquippableActiveAssets(args: GetExtendedEquippableActiveAssetsArguments[], opts: GetExtendedEquippableActiveAssetsOptions): ReturnType<typeof useGetExtendedEquippableActiveAssets>;
    useGetExtendedNft(args: GetExtendedNftArguments[], opts: GetExtendedNftOptions): ReturnType<typeof useGetExtendedNft>;
    useGetExtendedPendingAssets(args: GetExtendedPendingAssetsArguments[], opts: GetExtendedPendingAssetsOptions): ReturnType<typeof useGetExtendedPendingAssets>;
    useGetPaginatedMintedIds(args: GetPaginatedMintedIdsArguments[], opts: GetPaginatedMintedIdsOptions): ReturnType<typeof useGetPaginatedMintedIds>;
    useGetParent(args: GetParentArguments[], opts: GetParentOptions): ReturnType<typeof useGetParent>;
    useGetPendingAssets(args: GetPendingAssetsArguments[], opts: GetPendingAssetsOptions): ReturnType<typeof useGetPendingAssets>;
    useGetTopAssetAndEquippableDataForToken(args: GetTopAssetAndEquippableDataForTokenArguments[], opts: GetTopAssetAndEquippableDataForTokenOptions): ReturnType<typeof useGetTopAssetAndEquippableDataForToken>;
    useGetTopAssetMetaForToken(args: GetTopAssetMetaForTokenArguments[], opts: GetTopAssetMetaForTokenOptions): ReturnType<typeof useGetTopAssetMetaForToken>;
    useIsAssetEquipped(args: IsAssetEquippedArguments[], opts: IsAssetEquippedOptions): ReturnType<typeof useIsAssetEquipped>;
};
